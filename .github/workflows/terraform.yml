# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
    - '**/README.md'
    - '**/LICENSE'
    - 'visuals/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - '**/README.md'
    - '**/LICENSE'
    - 'visuals/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}
  # TF_VAR_backend_storage_container: ${{ secrets.TF_VAR_backend_storage_container }}
  # TF_VAR_backend_storage_account: ${{ secrets.TF_VAR_backend_storage_account }}
  # TF_VAR_backend_resource_group: ${{ secrets.TF_VAR_backend_resource_group }}
  TF_IN_AUTOMATION: true
  
name: ci-vanilla

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: ./src/terraform
    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}
      TF_APP_SERVICE_PLAN_NAME: ${{secrets.TF_APP_SERVICE_PLAN_NAME}}
      TF_HEROESAPI_APPSVCNAME: ${{secrets.TF_HEROESAPI_APPSVCNAME}}
      TF_HEROESWEB_APPSVCNAME: ${{secrets.TF_HEROESWEB_APPSVCNAME}}
      TF_RESOURCE_GROUP: ${{secrets.TF_RESOURCE_GROUP}}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt
        
      - name: Terraform Plan
        run: terraform plan
